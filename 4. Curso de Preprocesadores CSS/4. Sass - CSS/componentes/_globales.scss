// Las variables se crean asi
$modo-oscuro: true;
$Fuente1: 'Lato', sans-serif;
$Fuente2: 'Oswald', sans-serif;
$color-primario: #333333;
$color-claro: #ffffff;
$color-secundario: #8841da;
$color-variacion: #3f579a;

@mixin DarkMode($modo-oscuro){
	@if $modo-oscuro==true {
		main {
			background-color: $color-primario;
		}
		.perfil {
			background-color: $color-claro;
			&__nombre {
				color: $color-secundario;
			}
			&__titulo {
				color: $color-variacion;
			}
			&__boton {
				background-color: $color-primario;
				border-color: $color-primario;
			}
		}
		.articulo {
			h2 {
				color: $color-claro;
			}
			p {
				color: $color-claro;
			}
		}
	}

}

// Nos sirve para no repetir codigo
@mixin caja {
    border-radius: 20px;
    box-shadow: 0px 20px 33px 0px rgba(0,0,0,0.50);
    color: $color-primario;
    background-color: $color-claro;
}

// Un mixin mas un condicional
@mixin titulos($fuente) {
	@if $fuente==$Fuente1 {
		font-family: $Fuente1;
	}
	@else {
		font-family: $Fuente2;
		text-transform: uppercase;
	}
}

// Se diferencia de un mixin, porquie podemos decir que valor va a devolver
@function get-opacity($color, $nivel) {
	// Es una funcion predefinida rgba
	@return rgba($color,$nivel);
}

// Loop, no es necesario llamarlo para ejecutar
@each $header, $size in (h1: 30px, h2: 25px, h3: 20px) {
	#{$header} {
		font-size: $size;
		margin: 0;
	}
}

* {
	box-sizing: border-box;
}

body {
	margin: 0;
	@include titulos($Fuente1);
	@include DarkMode($modo-oscuro);
}

main {
	display: flex;
	width: 100%;
	height: 100vh;
}